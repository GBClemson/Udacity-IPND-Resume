
var bio = {
	"name":"Greg Bopp",
	"role": "An aspiring Web Developer",
	"contacts": {
		"mobile": {"href":"tel:+01-864-555-1212", "icon":"fa-mobile", "label":"&nbsp;+01-864-555-1212"},
		"email": {"href":"mailto:greg@awesome.com?Subject=You%20are%20awesome!", "icon":"fa-envelope", "label":"&nbsp;greg@awesome.com"},
		"github": {"href":"https://github.com/gbclemson", "icon":"fa-github", "label":"&nbsp;gbclemson"},
		"linkedin": {"href":"https://www.linkedin.com/in/greg-bopp/", "icon":"fa-linkedin", "label":"&nbsp;greg-bopp"},
		"location":"Anderson, SC"
	},
	"welcomeMessage":"Welcome! Let me start by saying...",
	"skills":["HTML / CSS","Bootstrap","Javascript","Python","Chicken Wings","Desire to Learn"],
	"biopic":"images/vitalogyHome-Green.png"
};
bio.display = function(){
	var newHTMLheaderName = HTMLheaderName.replace("%data%",bio.name);
	$("#bioName").append(newHTMLheaderName);
	var newHTMLlocation = HTMLlocation.replace("%data%",bio.contacts.location);
	$("#bioName").append(newHTMLlocation);

	var newHTMLheaderRole = HTMLheaderRole.replace("%data%",bio.role);
	$("#bioRole").append(newHTMLheaderRole);

	var newHTMLemail = HTMLemail.replace("%href%",bio.contacts.email.href)
								.replace("%icon%",bio.contacts.email.icon)
								.replace("%iconSize%","fa-lg");
	var newHTMLemailTop = newHTMLemail.replace("%label%"," ");
	var newHTMLemailBottom = newHTMLemail.replace("%label%",bio.contacts.email.label);

	var newHTMLmobileBottom = HTMLmobile.replace("%href%",bio.contacts.mobile.href)
									  .replace("%icon%",bio.contacts.mobile.icon)
									  .replace("%iconSize%","fa-lg")
									  .replace("%label%",bio.contacts.mobile.label);

	var newHTMLlinkedin = HTMLlinkedin.replace("%href%",bio.contacts.linkedin.href)
									  .replace("%icon%",bio.contacts.linkedin.icon)
									  .replace("%iconSize%","fa-lg");
	var newHTMLlinkedinTop = newHTMLlinkedin.replace("%label%"," ");
	var newHTMLlinkedinBottom = newHTMLlinkedin.replace("%label%",bio.contacts.linkedin.label);

	var newHTMLgithub = HTMLgithub.replace("%href%",bio.contacts.github.href)
								  .replace("%icon%",bio.contacts.github.icon)
								  .replace("%iconSize%","fa-lg");
	var newHTMLgithubTop = newHTMLgithub.replace("%label%"," ");
	var newHTMLgithubBottom = newHTMLgithub.replace("%label%",bio.contacts.github.label);

	$("#topContacts").append(newHTMLemailTop);
	$("#topContacts").append(newHTMLlinkedinTop);
	$("#topContacts").append(newHTMLgithubTop);

	$("#bottomContacts").append(newHTMLemailBottom);
	$("#bottomContacts").append(newHTMLmobileBottom);
	$("#bottomContacts").append(newHTMLlinkedinBottom);
	$("#bottomContacts").append(newHTMLgithubBottom);

	var newHTMLwelcomeMsg = HTMLwelcomeMsg.replace("%data%",bio.welcomeMessage);
	$("#welcome").append(newHTMLwelcomeMsg);
	var newHTMLbioPic = HTMLbioPic.replace("%data%",bio.biopic);
	$("#biopic").append(newHTMLbioPic);

	$("#skillsHeading").append(HTMLskillsStart);
	for(var i=0; i < bio.skills.length; i++){//FOR LOOP EXAMPLE
		var newHTMLskills = HTMLskills.replace("%data%",bio.skills[i]);

		$("#skills").append(newHTMLskills);
		}//FOR LOOP END
};
bio.display();

var projects = {
	"projects": [
	{
		"title": "Simple HTML/CSS Website",
		"dates": "2016",
		"description": "This project was completed while going through the Intro to Programming Nanodegree at udacity.com. It is an old school, "+
			"very basic website that was developed purely in html and css. My focus was to try new things with the large buttons to make them "+
			"responsive to a changing viewport as well as ensure that the top navigation area was consistent through each page as it loads.",
		"overlayText": "Simple 4 page website done purely in html and css",
		"images": ["project_01-01.JPG","project_01-02.JPG","project_01-03.JPG","project_01-04.JPG"]
	},{
		"title": "Python Fill-in-the-Blanks Quiz",
		"dates": "2016",
		"description": "This project was an Intro to Programming Nanodegree assignment through udacity.com. It is done completely in python and it "+
			"is a series of procedures that call on one another to display a short fill in the blanks quiz based on one of 3 difficulties that the "+
			"user selects. Once you select a difficulty, you will be asked to give a number of incorrect answers allowed. I tried to make it "+
			"completely break proof by accounting for answers that would not be acceptable.  Once you have completed a quiz you will be asked if "+
			"you would like to try another one.",
		"overlayText": "Python fill-in-the-blanks quiz",
		"images": ["project_02-01.JPG","project_02-02.JPG","project_02-03.JPG","project_02-04.JPG"]
	},{
		"title": "Movie Trailer Website",
		"dates": "2017",
		"description": "This was a fun project to do during the Intro to Programming Nanodegree at udacity.com. It is a simple movie info / trailer "+
				"website that is completely generated by using backend data stored in python. When you execute one of the files, you will launch a "+
				"web browser and the web page is dynamically populated with all of the movies and info that was loaded into a python file. "+
				"This was a great exercise in seeing how powerful the backend can be in a very approachable way. I opted to add a bit more "+
				"functionality to the project by dispalying each movie's release year, rating and a brief summary on the home page.",
		"overlayText": "One page website that collects data from pyton files and launches a page with movie information",
		"images": ["project_03-01.JPG","project_03-02.JPG","project_03-03.JPG","project_03-04.JPG"]
	}]
};
projects.display = function(){
	if(projects.projects.length > 0){
		$("#projectStart").append(HTMLprojectStart);
		for(var i=0; i < projects.projects.length; i++){
			var modalNum = (i+1);

			var newHTMLprojectTitle = HTMLprojectTitle.replace(/%modalNum%/g, modalNum)
											  	  	  .replace("%thumbnailImage%", projects.projects[i].images[0])
											  	  	  .replace("%overlayText%", projects.projects[i].overlayText)
											  	  	  .replace("%title%", projects.projects[i].title);

			var newHTMLprojectDates = HTMLprojectDates.replace("%dates%", projects.projects[i].dates)
													  .replace("%modalNum%", modalNum);


			for(var j=0; j < projects.projects[i].images.length; j++){

				if(j===0){
					var newHTMLprojectImage = HTMLprojectImage.replace("item", "item active");
				}

				newHTMLprojectImage = newHTMLprojectImage.replace("%projectImage%", projects.projects[i].images[j]);

				if(j < (projects.projects[i].images.length-1)){
					newHTMLprojectImage = newHTMLprojectImage+HTMLprojectImage;
				}
			}

			var newHTMLprojectDescription = HTMLprojectDescription.replace(/%modalNum%/g, modalNum)
											  .replace("%description%", projects.projects[i].description);

			var combinedProject = (newHTMLprojectTitle+newHTMLprojectDates+newHTMLprojectImage+newHTMLprojectDescription);
			$("#projects").append(combinedProject);

		}//FOR LOOP END
	}else{
		console.log("You got no projects!!");
	}
};
projects.display();

var work = {
	"jobs": [
	{
		"employer": "AT&T",
		"location": "Atlanta, GA",
		"workDates": "06/17 - Retirement",
		"title": "Application Developer",
		"duties": "Assist with developing new websites and web applications that meet the needs of internal teams. Participate in UI/UX design "+
			"as well as programming in many different languages. Someday, will be team lead and hopefully a technical director after that."
	},{
		"employer": "AT&T",
		"location": "Greenville, SC",
		"workDates": "11/14 - Present",
		"title": "Account Executive",
		"duties": "Support for staff at both national retailers such as best buy and sam's club as well as AT&T authorized retailers. Point of "+
			"contact for customer escalations and account issues."
	},{
		"employer": "AT&T",
		"location": "Anderson, SC",
		"workDates": "02/12 - 11/14",
		"title": "Retail Sales Consultant",
		"duties": "Assisted customers with their connected needs. Built rapport in order to find personal solutions for the customer's cell "+
			"phone and tablet needs. Also showed the benefits of our other goods and services including DirecTV, "+
			"Digital Life home automation and security as well as accesories and other protective needs."
	}]
};
work.display = function(){
	if(work.jobs.length > 0){
		$("#workStart").prepend(HTMLworkStart);
		for(var i=0; i < work.jobs.length; i++){//FOR LOOP EXAMPLE
			var newHTMLworkEmployer = HTMLworkEmployer.replace("%employer%",work.jobs[i].employer);
			var newHTMLworkLocation = HTMLworkLocation.replace("%workLocation%",work.jobs[i].location);
			var newHTMLworkDates = HTMLworkDates.replace("%workDates%",work.jobs[i].workDates);
			var newHTMLworkTitle = HTMLworkTitle.replace("%title%",work.jobs[i].title);
			var newHTMLworkDescription = HTMLworkDescription.replace("%duties%",work.jobs[i].duties);

			var combinedWorkEntry = (newHTMLworkEmployer+newHTMLworkLocation+newHTMLworkDates+newHTMLworkTitle+newHTMLworkDescription);
			$("#workEntries").append(combinedWorkEntry);
		}//FOR LOOP END
	}else{
		console.log("You got no work experience!!");
	}
};
work.display();

var education = {
  "schools": [
	{
		"degree": "Master of Science",
		"majors": ["Computer Science"],
		"dates": "2018-2021",
		"name": "Georgia Institute of Technology",
		"url":"http://www.omscs.gatech.edu/",
		"location": "Atlanta, GA"
	},{
		"degree": "Bachelor of Arts",
		"majors": ["Architecture"],
		"dates": "2001-2004",
		"name": "Clemson University",
		"url":"http://www.clemson.edu/caah/departments/architecture/",
		"location": "Clemson, SC"
	},{
		"degree": "Associate of Science",
		"majors": ["University Transfer"],
		"dates": "1998-2001",
		"name": "Tri-County Technical College",
		"url":"http://www.tctc.edu/",
		"location": "Pendleton, SC"
	}],

  "onlineCourses": [
	{
		"title": "Full Stack Web Developer Nanodegree",
		"dates": "03/17-08/17",
		"onlineSchool": "Udacity",
		"url": '<a href="https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd004" target="_blank">course link</a>'
	},{
		"title": "Front-End Web Developer Nanodegree",
		"dates": "02/17-03/17",
		"onlineSchool": "Udacity",
		"url": '<a href="https://www.udacity.com/course/front-end-web-developer-nanodegree--nd001" target="_blank">course link</a>'
	},{
		"title": "Intro to Programming Nanodegree",
		"dates":"05/16-02/17",
		"onlineSchool": "Udacity",
		"url": '<a href="https://www.udacity.com/degrees/intro-to-programming-nanodegree--nd000" target="_blank">course link</a>'
	}]
}
education.display = function(){
	if(education.schools.length > 0){
		$("#educationStart").prepend(HTMLschoolStart);
		for(var i=0; i < education.schools.length; i++){//FOR LOOP EXAMPLE
			var newHTMLschoolDegree = HTMLschoolDegree.replace("%degree%",education.schools[i].degree);
			var newHTMLschoolMajor = HTMLschoolMajor;

			var majorCount = 1;
			for(var j=0; j < education.schools[i].majors.length; j++){
				newHTMLschoolMajor = newHTMLschoolMajor.replace("%majors%",education.schools[i].majors[j]);

				if(education.schools[i].majors.length>majorCount){
					newHTMLschoolMajor = (newHTMLschoolMajor+",&nbsp;"+HTMLschoolMajor);
					majorCount = majorCount+1;
				}
			}
			var newHTMLschoolDates = HTMLschoolDates.replace("%dates%",education.schools[i].dates);
			var newHTMLschoolName = HTMLschoolName.replace("%url%",education.schools[i].url)
												  .replace("%name%",education.schools[i].name);
			var newHTMLschoolLocation = HTMLschoolLocation.replace("%schoolLocation%",education.schools[i].location);

			var combinedSchoolEntry = (newHTMLschoolDegree+newHTMLschoolMajor+newHTMLschoolDates+newHTMLschoolName+newHTMLschoolLocation);
			$("#educationEntries").append(combinedSchoolEntry);
		}//FOR LOOP END
	}if(education.onlineCourses.length > 0){
		$("#onlineStart").prepend(HTMLonlineClasses);
		for(i=0; i < education.onlineCourses.length; i++){//FOR LOOP EXAMPLE
			var newHTMLonlineTitle = HTMLonlineTitle.replace("%title%",education.onlineCourses[i].title)
			var newHTMLonlineDates = HTMLonlineDates.replace("%dates%",education.onlineCourses[i].dates)
			var newHTMLonlineSchool = HTMLonlineSchool.replace("%onlineSchool%",education.onlineCourses[i].onlineSchool)
			var newHTMLonlineURL = HTMLonlineURL.replace("%url%",education.onlineCourses[i].url);

			var combinedOnlineEntry = (newHTMLonlineTitle+newHTMLonlineDates+newHTMLonlineSchool+newHTMLonlineURL);
			$("#onlineEntries").append(combinedOnlineEntry);
		}//FOR LOOP END
	}else{
		console.log("You got no skoolin'!!");
	}
}
education.display();

$("#mapDiv").append(googleMap);

